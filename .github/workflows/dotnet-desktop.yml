name: Release Nightly Build & Publish

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Determine Nightly Version
        id: versioning
        run: |
          latest_stable_tag=$(git tag --list 'v[0-9]*.[0-9]*.[0-9]*' --sort=-v:refname | grep -v '^nightly-' | head -n 1 || echo "v0.0.0")
          base_version=$(echo "$latest_stable_tag" | sed 's/^v//')
          short_sha=$(git rev-parse --short HEAD)
          nightly_version="${base_version}-nightly.${short_sha}"
          echo "NIGHTLY_VERSION=${nightly_version}" >> $GITHUB_ENV
          echo "BASE_VERSION=${base_version}" >> $GITHUB_ENV
          echo "SHORT_SHA=${short_sha}" >> $GITHUB_ENV

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore -p:Version=${{ env.NIGHTLY_VERSION }}

      - name: Publish Projects
        run: |
          dotnet publish src/ZDK.ResourceManager.Abstractions/ZDK.ResourceManager.Abstractions.csproj -c Release -o ./publish/ZDK.ResourceManager.Abstractions
          dotnet publish src/ZDK.Localization.Abstractions/ZDK.Localization.Abstractions.csproj -c Release -o ./publish/ZDK.Localization.Abstractions
          dotnet publish src/ZDK.Localization.Csv/ZDK.Localization.Csv.csproj -c Release -o ./publish/ZDK.Localization.Csv
          dotnet publish src/ZDK.ResourceManager.FileSystem/ZDK.ResourceManager.FileSystem.csproj -c Release -o ./publish/ZDK.ResourceManager.FileSystem

      - name: Prepare Release Assets Directory
        run: |
          rm -rf release-assets
          mkdir release-assets
          zip -r ./release-assets/ZDK.ResourceManager.Abstractions-nightly-${{ env.NIGHTLY_VERSION }}.zip ./publish/ZDK.ResourceManager.Abstractions
          zip -r ./release-assets/ZDK.Localization.Abstractions-nightly-${{ env.NIGHTLY_VERSION }}.zip ./publish/ZDK.Localization.Abstractions
          zip -r ./release-assets/ZDK.Localization.Csv-nightly-${{ env.NIGHTLY_VERSION }}.zip ./publish/ZDK.Localization.Csv
          zip -r ./release-assets/ZDK.ResourceManager.FileSystem-nightly-${{ env.NIGHTLY_VERSION }}.zip ./publish/ZDK.ResourceManager.FileSystem

      - name: Generate Custom Release Notes
        id: custom_release_notes
        run: |
          echo "Generating custom release notes..."

          # Get the latest tag (stable or nightly)
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "none")

          # If no tags exist, use the initial commit as the starting point
          if [ "$latest_tag" = "none" ]; then
            echo "No previous tags found. Using initial commit."
            start_ref=$(git rev-list --max-parents=0 HEAD)
          else
            echo "Latest tag found: $latest_tag"
            start_ref=$latest_tag
          fi

          # Get the current commit
          end_ref=$(git rev-parse HEAD)

          # Generate the commit list
          commit_list=$(git log --oneline $start_ref..$end_ref)

          # Generate the GitHub compare link
          repo_url="https://github.com/${{ github.repository }}"
          compare_url="$repo_url/compare/$start_ref...$end_ref"

          # Write the release notes to a file
          echo "**Commits since last release ($start_ref):**" > release_notes.md
          echo "$commit_list" >> release_notes.md
          echo "" >> release_notes.md
          echo "**[Full Changelog]($compare_url)**" >> release_notes.md

          # Output the path to the release notes file
          echo "body_path=release_notes.md" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/heads/')
        with:
          tag_name: nightly-${{ env.NIGHTLY_VERSION }}
          name: Nightly Build - ${{ env.NIGHTLY_VERSION }}
          draft: false
          prerelease: true
          generate_release_notes: false
          body_path: release_notes.md
          append_body: true
          files: |
            ./release-assets/ZDK.ResourceManager.Abstractions-nightly-${{ env.NIGHTLY_VERSION }}.zip
            ./release-assets/ZDK.Localization.Abstractions-nightly-${{ env.NIGHTLY_VERSION }}.zip
            ./release-assets/ZDK.Localization.Csv-nightly-${{ env.NIGHTLY_VERSION }}.zip
            ./release-assets/ZDK.ResourceManager.FileSystem-nightly-${{ env.NIGHTLY_VERSION }}.zip

      - name: Publish NuGet Packages
        run: dotnet nuget push "./nuget-packages/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
